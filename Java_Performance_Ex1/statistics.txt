-------> Total times:
-------> Wallclock:      1,30s    (1302,84ms),
-------> CPU time:       0,05s    (46,88ms)

-------------------------- Method: java.io.PrintStream.println --------------------------
-> Total Calls: 7
-> Sum walltime (% of total):      3,63ms (0,28%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,52ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,09ms     /      1,93ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (14,29%) from "test.Test_2.testmethod3"
--->    1 calls (14,29%) from "test.Test_1.testmethod2"
--->    3 calls (42,86%) from "test.Test_1.Test_1"
--->    2 calls (28,57%) from "test.Test_1.main"


-------------------------- Method: java.lang.System.currentTimeMillis --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      0,09ms (0,01%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,09ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,09ms     /      0,09ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.main"


-------------------------- Method: test2.Test_3.otherPackageStaticMethod --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      1,69ms (0,13%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      1,69ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      1,69ms     /      1,69ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.main"


-------------------------- Method: java.lang.StringBuilder.append --------------------------
-> Total Calls: 5
-> Sum walltime (% of total):      0,79ms (0,06%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,16ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,06ms     /      0,26ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (20,00%) from "test.Test_2.testmethod3"
--->    1 calls (20,00%) from "test.Test_1.testmethod2"
--->    2 calls (40,00%) from "test.Test_1.Test_1"
--->    1 calls (20,00%) from "test.Test_1.main"


-------------------------- Method: java.lang.StringBuilder.StringBuilder --------------------------
-> Total Calls: 4
-> Sum walltime (% of total):      0,47ms (0,04%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,12ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,07ms     /      0,16ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (25,00%) from "test.Test_2.testmethod3"
--->    1 calls (25,00%) from "test.Test_1.testmethod2"
--->    1 calls (25,00%) from "test.Test_1.Test_1"
--->    1 calls (25,00%) from "test.Test_1.main"


-------------------------- Method: java.lang.StringBuilder.toString --------------------------
-> Total Calls: 3
-> Sum walltime (% of total):      0,34ms (0,03%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,11ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,06ms     /      0,15ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (33,33%) from "test.Test_2.testmethod3"
--->    1 calls (33,33%) from "test.Test_1.testmethod2"
--->    1 calls (33,33%) from "test.Test_1.Test_1"


-------------------------- Method: java.lang.Double.valueOf --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      0,06ms (0,00%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,06ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,06ms     /      0,06ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.main"


-------------------------- Method: java.lang.Double.doubleValue --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      0,12ms (0,01%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,12ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,12ms     /      0,12ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test2.Test_3.otherPackageStaticMethod"


-------------------------- Method: test.Test_1.testmethod2 --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      9,12ms (0,70%)
-> Sum cputime  (% of total):     15,63ms (33,33%)

-> Avg walltime (arithmetic):      9,12ms
-> Avg cputime  (arithmetic):     15,63ms

-> Min / Max walltime:      9,12ms     /      9,12ms
-> Min / Max cputime:      15,63ms     /     15,63ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.main"


-------------------------- Method: test.Test_2.Test_2 --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      3,90ms (0,30%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      3,90ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      3,90ms     /      3,90ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.main"


-------------------------- Method: test.Test_1.Test_1 --------------------------
-> Total Calls: 2
-> Sum walltime (% of total):     27,27ms (2,09%)
-> Sum cputime  (% of total):     31,25ms (66,67%)

-> Avg walltime (arithmetic):     13,64ms
-> Avg cputime  (arithmetic):     15,63ms

-> Min / Max walltime:      2,26ms     /     25,01ms
-> Min / Max cputime:      15,63ms     /     15,63ms

-> Callers:
--->    2 calls (100,00%) from "test.Test_1.main"


-------------------------- Method: test.Test_1.return5 --------------------------
-> Total Calls: 2
-> Sum walltime (% of total):      0,58ms (0,04%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,29ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,26ms     /      0,32ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (50,00%) from "test.Test_2.testmethod3"
--->    1 calls (50,00%) from "test.Test_1.main"


-------------------------- Method: java.lang.String.String --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      0,10ms (0,01%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,10ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,10ms     /      0,10ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.testmethod2"


-------------------------- Method: test2.Test_3.Test_3 --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      0,06ms (0,00%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,06ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,06ms     /      0,06ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.main"


-------------------------- Method: java.lang.String.valueOf --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      0,10ms (0,01%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,10ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,10ms     /      0,10ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.testmethod2"


-------------------------- Method: test.Test_2.testmethod3 --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      6,50ms (0,50%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      6,50ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      6,50ms     /      6,50ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.main"


-------------------------- Method: test2.Test_Uninstrumented.uninstrumentedSleep --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):   1236,16ms (94,88%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):   1236,16ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:   1236,16ms     /   1236,16ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.main"


-------------------------- Method: java.lang.Math.round --------------------------
-> Total Calls: 2
-> Sum walltime (% of total):      0,17ms (0,01%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,09ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,05ms     /      0,12ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (50,00%) from "test2.Test_3.otherPackageStaticMethod"
--->    1 calls (50,00%) from "test2.Test_3.otherPackageMethod"


-------------------------- Method: test2.Test_3.otherPackageMethod --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      0,70ms (0,05%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,70ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,70ms     /      0,70ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.main"


-------------------------- Method: test.Test_1.recursiveLong --------------------------
-> Total Calls: 4
-> Sum walltime (% of total):     10,43ms (0,80%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      2,61ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,08ms     /      4,90ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    3 calls (75,00%) from "test.Test_1.recursiveLong"
--->    1 calls (25,00%) from "test.Test_1.main"


-------------------------- Method: java.lang.Object.toString --------------------------
-> Total Calls: 1
-> Sum walltime (% of total):      0,04ms (0,00%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,04ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,04ms     /      0,04ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (100,00%) from "test.Test_1.main"


-------------------------- Method: test.Test_1.nonStaticEmpty --------------------------
-> Total Calls: 4
-> Sum walltime (% of total):      0,51ms (0,04%)
-> Sum cputime  (% of total):      0,00ms (0,00%)

-> Avg walltime (arithmetic):      0,13ms
-> Avg cputime  (arithmetic):      0,00ms

-> Min / Max walltime:      0,07ms     /      0,27ms
-> Min / Max cputime:       0,00ms     /      0,00ms

-> Callers:
--->    1 calls (25,00%) from "test.Test_2.testmethod3"
--->    1 calls (25,00%) from "test.Test_1.main"
--->    2 calls (50,00%) from "test.Test_1.Test_1"


