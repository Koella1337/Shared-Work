<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="10" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="458" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="458" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
      <class name="factory.subsystems.monitoring.MonitoringSystemTest">
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="beforeMethod" is-config="true" duration-ms="365" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="addOrder()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="addOrder" duration-ms="3" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addOrder -->
        <test-method status="PASS" signature="handleError()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="handleError" duration-ms="37" started-at="2019-01-13T11:27:12Z" description="verifies if only the correct method of the error handler is called when a error occurs" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleError -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="handleEvent()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="handleEvent" duration-ms="0" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleEvent -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="handleEventCheckThatErrorEventHandlerIsNotUsed()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="handleEventCheckThatErrorEventHandlerIsNotUsed" duration-ms="2" started-at="2019-01-13T11:27:12Z" description="verifies that the error handler is not used when the event is not of type error or global error" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleEventCheckThatErrorEventHandlerIsNotUsed -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="handleEventHandlingException()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="handleEventHandlingException" duration-ms="1" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleEventHandlingException -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="handleGlobalError()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="handleGlobalError" duration-ms="7" started-at="2019-01-13T11:27:12Z" description="verifies if only the correct method of the error handler is called when a global error occurs" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleGlobalError -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="handleNewOrder()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="handleNewOrder" duration-ms="0" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleNewOrder -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="handleNormalEvent()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="handleNormalEvent" duration-ms="0" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleNormalEvent -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="start()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="start" duration-ms="0" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="stop()[pri:0, instance:factory.subsystems.monitoring.MonitoringSystemTest@4b9e13df]" name="stop" duration-ms="0" started-at="2019-01-13T11:27:12Z" finished-at="2019-01-13T11:27:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stop -->
      </class> <!-- factory.subsystems.monitoring.MonitoringSystemTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
